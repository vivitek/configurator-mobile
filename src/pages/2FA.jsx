import React from "react";
import { useHistory } from "react-router";
import { useMutation } from "@apollo/client";
import { CHECK_2FA } from "../utils/apollo";
import { Button, Card, CardBody, CardTitle } from "reactstrap";
import FormGroupInput from "../components/FormGroupInput";
import { useFormik } from "formik";
import Swal from "sweetalert2";
import { useContext } from "react";
import { UserContext } from "../contexts/UserContext";

const CodeVerification = () => {
    const history = useHistory();
    const [checkCode] = useMutation(CHECK_2FA);
    const userContext = useContext(UserContext);
    const codeForm = useFormik({
        initialValues: {
            code: "",
        },
        onSubmit: async (values) => {
            localStorage.setItem(
                "vivi-jwt",
                localStorage.getItem("vivi-jwt-tmp")
            );
            try {
                const res = await checkCode({
                    variables: {
                        code: values.code,
                    },
                });
                if (res.data.checkOtpCode === false) {
                    Swal.fire(
                        "Oops...",
                        "You either wrote the wrong code or you're not who you say you are...\nPlease try again",
                        "error"
                    );
                } else {
                    const me = JSON.parse(localStorage.getItem("vivi-user"));
                    Swal.fire(
                        "Allright!",
                        `Welcome back, ${me.username}`,
                        "success"
                    );
                    userContext.updateAuthed(true);
                    history.push("/");
                }
            } catch (error) {
                console.error(error);
            }
        },
    });
    return (
        <div>
            <Card>
                <CardBody>
                    <CardTitle>Is it really you?</CardTitle>
                    <p>
                        In order to access this account, please enter the code
                        generated by your Authenticator Application
                    </p>
                    <form onSubmit={codeForm.handleSubmit}>
                        <FormGroupInput
                            name="code"
                            label="Code"
                            handleChange={codeForm.handleChange}
                            value={codeForm.values.code}
                            error={codeForm.errors.code}
                            touched={codeForm.touched.code}
                        />
                        <Button type="submit" color="primary">
                            Submit
                        </Button>
                    </form>
                </CardBody>
            </Card>
        </div>
    );
};

export default CodeVerification;
